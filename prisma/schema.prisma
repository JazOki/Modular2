// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Admin {
  id          String  @id @default(uuid())
  usuario     String  @db.VarChar(50)
  nombre      String  @db.VarChar(100)
  apellidoPat String  @db.VarChar(100)
  apellidoMat String  @db.VarChar(100)
  correo      String  @db.VarChar(100)
  isEnable    Boolean @default(true)
  foto        String? @db.Text
  contrasena  String  @db.VarChar(255)
}

model Alumno {
  codigo       String      @id @db.VarChar(9)
  matricula    String      @unique @db.VarChar(6)
  nombre       String      @db.VarChar(100)
  apellidoPat  String      @db.VarChar(100)
  apellidoMat  String      @db.VarChar(100)
  correo       String      @unique @db.VarChar(100)
  isEnable     Boolean     @default(true)
  foto         String?     @db.Text
  contrasena   String      @db.VarChar(255)
  proyectoE1   ProyectoE1? @relation(fields: [proyectoE1Id], references: [id]) // "?" para decir que el campo es opcional
  proyectoE1Id String?

  //docente       Docente? @relation(fields: [docenteCodigo], references: [codigo])
  //docenteCodigo String?  @db.VarChar(9)

  ProyectoE2   ProyectoE2? @relation(fields: [proyectoE2Id], references: [id])
  proyectoE2Id String?

  ProyectoE3   ProyectoE3? @relation(fields: [proyectoE3Id], references: [id])
  proyectoE3Id String?
}

model Docente {
  codigo      String       @id @default(uuid())
  nombre      String       @db.VarChar(100)
  apellidoPat String       @db.VarChar(100)
  apellidoMat String       @db.VarChar(100)
  correo      String       @db.VarChar(100)
  isEnable    Boolean      @default(true)
  foto        String?      @db.Text
  contrasena  String       @db.VarChar(255)
  // alumnos     Alumno[]
  ProyectosE1 ProyectoE1[]
  ProyectosE2 ProyectoE2[]
  ProyectosE3 ProyectoE3[]
}

model ProyectoE1 {
  id            String   @id @default(uuid())
  nombre        String   @db.VarChar(100)
  urldocumento  String   @db.Text
  estado        Estado   @default(Entregado)
  observacion   String?  @default("Sin observaciones") @db.VarChar(300)
  fechaRegistro DateTime @default(now())
  alumnos       Alumno[]
  docente       Docente  @relation(fields: [docenteCodigo], references: [codigo])
  docenteCodigo String   @db.VarChar(300)
}

model ProyectoE2 {
  id            String     @id @default(uuid())
  nombre        String     @db.VarChar(100)
  urldocumento  String     @db.Text
  estado        Estado     @default(Entregado)
  evaluacion    Evaluacion @default(Sin_evaluar)
  observacion   String?    @default("Sin observaciones") @db.VarChar(300)
  fechaRegistro DateTime   @default(now())
  alumnos       Alumno[]
  docente       Docente    @relation(fields: [docenteCodigo], references: [codigo])
  docenteCodigo String     @db.VarChar(300)
}

model ProyectoE3 {
  id            String   @id @default(uuid())
  nombre        String   @db.VarChar(100)
  urldocumento  String   @db.Text
  estado        Estado   @default(Entregado)
  observacion   String?  @default("Sin observaciones") @db.VarChar(300)
  fechaRegistro DateTime @default(now())
  alumnos       Alumno[]
  docente       Docente  @relation(fields: [docenteCodigo], references: [codigo])
  docenteCodigo String   @db.VarChar(300)
}

enum Estado {
  Entregado
  Debe_modificarse
  Revisado
  Modificado
}

enum Evaluacion {
  Acreditado
  No_acreditado
  Sin_evaluar
}
